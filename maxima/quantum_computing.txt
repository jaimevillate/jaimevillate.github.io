Quantum Computing Simulator for Maxima - Reference Manual
Copyright (C) 2021 Jaime E. Villate

Time-stamp: "2021-06-03 17:39:41 villate"


Functions
---------

binlist([n])
   Should be called with one or two arguments, binlist(k) or binlist(k,n),
   where k and n are natural numbers. With only one argument, a list of
   binary digits is returned, which are the representation of k in binary.
   With two arguments, zeros are included at the beginning in order
   to return a list with exactly n binary digits. Notice that for the result
   to represent a possible state of m qubits, n should be equal to 2^m and
   k should be between 0 and 2^m-1.

binlist2dec(l)
   Given a list with n binary digits, it returns the decimal number it
   represents.

CNOT(q,i,j)
   Changes the value of the j'th qubit, in a state q of m qubits, when
   the value of the i'th qubit equals 1.
   It modifies the list q and returns its modified value.

controlled(U,q,c,i)
   Applies a matrix U, acting on mu qubits, on qubits i through i+mu-1
   on the state q of a system of mq qubits (mq > mu), when the value of
   the c'th qubit in q equals 1.
   i should be an intenger between 1 and mq+1-mu.
   c should be an integer within 1 and mq, excluding the qubits to be
   modified (i through i+mu-1)
   U can be a symbol representing one of the predefined matrices.
   It modifies the list q and returns that new list.

gate(U,q,[bits])
   Applies a matrix U, acting on mu qubits on the list q corresponding
   to a state of mq qubits (mq >= mu).
   When U acts on several qubits (mu > 1), and no more arguments are
   given, the matrix will act on qubits 1, 2, ..., mu. A third
   argument can be given, a integer from 1 through mq+1-mu, in which
   case the matrix will act on qubits i through i+mu-1.
   When U acts on only one qubit (mu = 1), and no more arguments are
   given, the matrix will act in all of the qubits. If more arguments
   are given, they should be diferent integer numbers between 1 and
   nq, and the matrix will act in the qubits corresponding to those
   numbers.
   U can be a symbol representing one of the predefined matrices.
   It modifies the list q and returns that new list.

gate_matrix(U,n,[bits])
   Creates the matrix corresponding to the action of a single qbit matrix U
   acting on one of several of the qubits in a state of n qubits.
   The first argument must be a 2 by 2 matrix or a symbol representing one
   of the predefined matrices.
   There must be a second argument, a natural number, corresponding to the
   total number of qbits.
   If no more arguments are given, the matrix will act in all of the qubits.
   If there are more arguments, they should be one or more different
   natural numbers, between 1 and n, and the matrix will act in the qubits
   corresponding to those numbers.
   It returns a 2^n by 2^n matrix.

linsert(e, list, pos)
   Inserts an expression or list "e" into a list "list" at position "pos".
   The list could be empty and "pos" must be an integer between 1 and the
   length of "list" plus 1.

lreplace(e, list, pos)
   If e is a list of length n, the elements in the positions pos, pos+1,
   ..., pos+n-1 of the list "list" are replaced by e, or the first elements
   of e if the end of "list" is reached.
   If e is an expression, the element in position "pos" of "list" is
   replaced by that expression.
   "pos" must be an integer between 1 and the length of "list".

normalize(q)
   Returns the normalized version of a quantum state given as a list q.

qdisplay(q)
   Represents the state q of a system of n qubits as a linear combination
   of the computational states with n binary digits.
   It returns an expression including strings and symbols.

qmeasure(q,[bits])
   Measures the value of one or more qubits in a system of n qubits with
   state q.
   It requires 1 or more arguments. The first argument must be the state q.
   If no more arguments are given, all the n qubits will be measured.
   If more arguments are given, they should be different natural numbers
   between 1 and n, and the state of those qubits will be measured.
   It returns a list with the values of the qubits measured (either 0 or 1),
   in the same order that the were requested or in ascending order if no
   second argument was given.
   It modifies the list q, reflecting the collapse of the quantum state
   after the measurement.

qubits([b])
   Returns a list with 2^n elements, representing the state of n qubits.
   The argument can be a single natural number n, or n binary digits.
   If given only one natural number, greater than 1, it returns the ground
   state for a system of n qubits.
   If given n binary digits (n can be 1), it returns the state of a system
   of n qubits with those binary values.

Rx(ang), Ry(ang), Rz(ang)
   Create the 1-qubit matrix corresponding to a rotation of "ang"
   radians around x, y or z axis, 

tprod([ops])
   Returns the tensor product of n matrices or n lists.

toffoli(q,i,j,k)
   Changes the value of the k'th qubit, in a state q of m qubits, when
   the value of the i'th snf j'th qubitd equal 1.
   It modifies the list q and returns its modified value.

Predefined matrices
-------------------
I, X, Y, Z, H, S

